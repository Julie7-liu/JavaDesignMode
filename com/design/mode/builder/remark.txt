建造者模式（builder，又名生成器模式）:将一个复杂对象的建造与它的表示分离，使得同样的构建过程可以创建不同的表示。如果我们用了建造者模式，那么用户就只需指定需要建造的类型就可以得到它们，而具体建造的过程和细节就不需知道了。
                                                                         当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时适用的模式。
意图需要：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示的意图时；主要是用于创建一些复杂的对象，这些对象内部构建间的建造顺序通常是稳定的，但对象内部的构建面临着复杂的变化。
好处：使用建造代码与代码分离，由于建造者隐藏了该产品是如何组装的，所以若需要改变一个产品的内部表示，只需要再定义一个具体的建造者就可以了。

内聚性：一个例程内部组成部分之间相互联系的紧密程度。
耦合性：一个例程与其他例程之间联系的紧密程度。
松耦合：软件开发的目标应该是创建这样的例程：内部完整，也就是高内聚，而与其他例程之间的联系则是小巧、直接、可见、灵活的